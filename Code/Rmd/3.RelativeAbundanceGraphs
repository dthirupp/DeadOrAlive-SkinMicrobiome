---
title: "3.RelativeAbundanceGraphs"
author: "Deepan"
date: "12/27/2024"
output: html_document
---

## Load libraries

```{r, message = FALSE}
# Packages I commonly use
# install.packages("stringr")
# install.packages("ggplot2")
# install.packages("reshape")
# install.packages("reshape2")
# install.packages("gplots")
# install.packages("FactoMineR")
# install.packages("factoextra")
library(stringr)
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(reshape)
library(reshape2)
library(gplots)
library(RColorBrewer)
```


## Load formatted dataframe

```{r}

df <- read.delim2("/media/deepan/Deepan/LiveDead/igm-storage2.ucsd.edu/220428_A00953_0539_AHMNLKDSX3/202410_revision/swab_blank_removed/skin_SMGC_Zebra60perc_formatted.tsv", check.names = FALSE)

smgc <- read.delim2("/media/deepan/Deepan/SMGC/SMGC_bacteria_metadata.tsv", check.names = FALSE)[, c(1,2,15,16)]

colnames(df)[1] <- "#genome"

df[, -1] <- sapply(df[, -1], as.numeric)

```

## Renaming first column by the unique species name

```{r}

smgc$Taxa <- ifelse ( smgc$gtdb_species == "s__", smgc$gtdb_genus, smgc$gtdb_species )

df <- merge(df, smgc[, c(-3, -4)], by = "#genome")

df <- df[ , c ( ncol(df), 2:(ncol(df) -1) )]

```

##

```{r}

barplot( colSums(df[ , c(-1, -ncol(df))]), main = "Total Reads", xlab = "Sample", ylab = "Reads", col = "blue", las = 2)

```


## Reads per base-pair per million normalisation

```{r}

df[, -1] <- apply( df[, -1], 2, function(x) x/df$total_length) #dividing by the matching ref genome length to account for genome size bias

df <- df[, -ncol(df)]

df[, -1] <- apply( df[, -1], 2, function(x) x/sum(x)*1e6) #cpm to normalize across and account for read depth bias.

sum(df$`1-UB`) #test using random sample

```

## Formatting to aggregate by species only

```{r}

df$Taxa <- paste(str_split( df$Taxa, "_", simplify = TRUE)[ , 1], str_split( df$Taxa, "_", simplify = TRUE)[ , 3], sep = "_")

df <- aggregate( df[, -1], by = list(df$Taxa), sum)

```


## Finding top species using median for plotting

```{r}

df$median <- apply( df[, -1], 1, median)

df <- df[ order(df$median, decreasing = TRUE), ]

#keep for plotting if relative abundance is greater than 0.02% of median composition.

df$Taxa <- ifelse( df$median > 250, df$Group.1, "other") #what to set?

df <- df[, c(ncol(df), 2: (ncol(df)-1), 1)]

df[ str_detect(df$Group.1, "s_"), ]


```


